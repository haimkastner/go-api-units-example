{
  "components": {
    "schemas": {
      "LengthDto": {
        "description": "LengthDto represents a Length measurement with a numerical value and its corresponding unit.",
        "properties": {
          "unit": {
            "$ref": "#/components/schemas/LengthUnits"
          },
          "value": {
            "description": "Value is the numerical representation of the Length.",
            "type": "number"
          }
        },
        "required": [
          "value",
          "unit"
        ],
        "title": "LengthDto",
        "type": "object"
      },
      "LengthUnits": {
        "enum": [
          "Meter",
          "Mile",
          "Yard",
          "Foot",
          "UsSurveyFoot",
          "Inch",
          "Mil",
          "NauticalMile",
          "Fathom",
          "Shackle",
          "Microinch",
          "PrinterPoint",
          "DtpPoint",
          "PrinterPica",
          "DtpPica",
          "Twip",
          "Hand",
          "AstronomicalUnit",
          "Parsec",
          "LightYear",
          "SolarRadius",
          "Chain",
          "Angstrom",
          "DataMile",
          "Femtometer",
          "Picometer",
          "Nanometer",
          "Micrometer",
          "Millimeter",
          "Centimeter",
          "Decimeter",
          "Decameter",
          "Hectometer",
          "Kilometer",
          "Megameter",
          "Gigameter",
          "Kiloyard",
          "Kilofoot",
          "Kiloparsec",
          "Megaparsec",
          "KilolightYear",
          "MegalightYear"
        ],
        "title": "LengthUnits",
        "type": "string"
      },
      "Rfc7807Error": {
        "description": "A standard RFC-7807 error",
        "properties": {
          "detail": {
            "description": "A human-readable explanation specific to this occurrence of the problem.",
            "type": "string"
          },
          "error": {
            "description": "Error message",
            "type": "string"
          },
          "extensions": {
            "description": "Additional metadata about the error.",
            "type": "object"
          },
          "instance": {
            "description": "A URI reference that identifies the specific occurrence of the problem.",
            "type": "string"
          },
          "status": {
            "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
            "type": "integer"
          },
          "title": {
            "description": "A short, human-readable summary of the problem type.",
            "type": "string"
          },
          "type": {
            "description": "A URI reference that identifies the problem type.",
            "type": "string"
          }
        },
        "required": [
          "type",
          "title",
          "status"
        ],
        "title": "Rfc7807Error",
        "type": "object"
      }
    }
  },
  "info": {
    "contact": {
      "email": "hello@haim-kastner.com",
      "name": "API Support",
      "url": "https://github/haimkastner/go-api-units-example/issues"
    },
    "description": "This is a simple example of a Go API using the Gleece \u0026 unitsnet-go packages",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "title": "Go API Units Example",
    "version": "1.0.0"
  },
  "openapi": "3.0.0",
  "paths": {
    "/units/post-unit": {
      "post": {
        "description": "Post unit API and return the processed unit",
        "operationId": "TestUnit",
        "parameters": [
          {
            "description": "The unit to be used in response",
            "in": "query",
            "name": "useUnit",
            "schema": {
              "$ref": "#/components/schemas/LengthUnits"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LengthDto"
              }
            }
          },
          "description": "The unit to process",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LengthDto"
                }
              }
            },
            "description": "The response with the processed unit"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rfc7807Error"
                }
              }
            },
            "description": "The error when process failed"
          },
          "default": {
            "description": ""
          }
        },
        "security": [],
        "summary": "Post unit API and return the processed unit",
        "tags": [
          "Units"
        ]
      }
    }
  },
  "servers": [
    {
      "url": "https://units-api.gleece.dev"
    }
  ]
}